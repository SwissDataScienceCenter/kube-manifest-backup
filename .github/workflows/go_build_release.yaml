name: Go Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64

    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.4'

      - name: Check out code
        uses: actions/checkout@v4

      - name: Run tests
        run: go test
        shell: bash

      - name: Build
        run: |
          env GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o kube-manifest-backup-${{ matrix.goos }}-${{ matrix.goarch }} main.go
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: kube-manifest-backup-${{ matrix.goos }}-${{ matrix.goarch }}
          path: kube-manifest-backup-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Create Release
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.arch == 'amd64' }}
        uses: softprops/action-gh-release@v1
        with:
          files: |
            kube-manifest-backup-linux-amd64
            kube-manifest-backup-windows-amd64
            kube-manifest-backup-darwin-amd64
            kube-manifest-backup-linux-arm64
            kube-manifest-backup-windows-arm64
            kube-manifest-backup-darwin-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
