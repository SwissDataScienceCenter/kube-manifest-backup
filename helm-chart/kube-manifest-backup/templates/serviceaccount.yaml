{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.serviceAccount.name | quote }}
  labels:
    {{- include "kube-manifest-backup.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
---
{{- $global := .Values.global -}}
{{- $serviceAccountName := .Values.serviceAccount.name -}}
{{- range $resource := $global.backupResources }}
{{- if eq (len $resource.namespaces) 1 }}
{{- if eq (index $resource.namespaces 0) "" }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "{{ $.Release.Name }}-{{ $resource.resource }}-cluster-role"
rules:
- apiGroups: ["{{ $resource.group }}"]
  resources: ["{{ $resource.resource }}"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ $.Release.Name }}-{{ $resource.resource }}-cluster-role-binding"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "{{ $.Release.Name }}-{{ $resource.resource }}-cluster-role"
subjects:
- kind: ServiceAccount
  name: {{ $serviceAccountName }}
  namespace: {{ $.Release.Namespace }}
{{- else }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ index $resource.namespaces 0 }}-{{ $resource.resource }}-backup-role"
  namespace: "{{ index $resource.namespaces 0 }}"
rules:
- apiGroups: ["{{ $resource.group }}"]
  resources: ["{{ $resource.resource }}"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ $.Release.Name }}-{{ $resource.resource }}-{{ $resource.group }}-role-binding"
  namespace: "{{ index $resource.namespaces 0 }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "{{ index $resource.namespaces 0 }}-{{ $resource.resource }}-backup-role"
subjects:
- kind: ServiceAccount
  name: {{ $serviceAccountName }}
  namespace: {{ $.Release.Namespace }}
{{- end }}
{{- end }}
{{- end }}
{{- if $global.privateKey.usePrivateGPGKey }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $.Release.Name }}-private-key-role
  namespace: {{ $global.privateKey.secretNamespace }}
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $.Release.Name }}-private-key-role-binding
  namespace: {{ $global.privateKey.secretNamespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $.Release.Name }}-private-key-role
subjects:
- kind: ServiceAccount
  name: {{ $serviceAccountName }}
  namespace: {{ $.Release.Namespace }}
{{- end }}
{{- end }}
